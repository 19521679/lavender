{"ast":null,"code":"import axios from \"axios\";\n\nclass AxiosServices {\n  constructor() {\n    const instance = axios.create();\n    instance.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.instance = instance;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  handleError(error) {\n    return Promise.reject(error);\n  }\n\n  get(url, config) {\n    return this.instance.get(url, config);\n  }\n\n  getImage(url) {\n    return this.instance.get(url, {\n      responseType: \"blob\"\n    });\n  }\n\n  post(url, data, config) {\n    return this.instance.post(url, data, config);\n  }\n\n  put(url, data, config) {\n    return this.instance.put(url, data, config);\n  }\n\n  delete(url, config) {\n    return this.instance.delete(url, config);\n  }\n\n}\n\nexport default new AxiosServices();","map":{"version":3,"sources":["C:/Users/huy/Documents/UIT/web/lavender/lavender/src/Components/apis/axiosServices.js"],"names":["axios","AxiosServices","constructor","instance","create","interceptors","response","use","handleSuccess","handleError","error","Promise","reject","get","url","config","getImage","responseType","post","data","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,WAAW,GAAG;AACZ,UAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,EAAjB;AACAD,IAAAA,QAAQ,CAACE,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CAAmC,KAAKC,aAAxC,EAAuD,KAAKC,WAA5D;AACA,SAAKN,QAAL,GAAgBA,QAAhB;AACD;;AACDK,EAAAA,aAAa,CAACF,QAAD,EAAW;AACtB,WAAOA,QAAP;AACD;;AACDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;;AACDG,EAAAA,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAc;AACf,WAAO,KAAKZ,QAAL,CAAcU,GAAd,CAAkBC,GAAlB,EAAuBC,MAAvB,CAAP;AACD;;AACDC,EAAAA,QAAQ,CAACF,GAAD,EAAM;AACZ,WAAO,KAAKX,QAAL,CAAcU,GAAd,CAAkBC,GAAlB,EAAuB;AAAEG,MAAAA,YAAY,EAAE;AAAhB,KAAvB,CAAP;AACD;;AACDC,EAAAA,IAAI,CAACJ,GAAD,EAAMK,IAAN,EAAYJ,MAAZ,EAAoB;AACtB,WAAO,KAAKZ,QAAL,CAAce,IAAd,CAAmBJ,GAAnB,EAAwBK,IAAxB,EAA8BJ,MAA9B,CAAP;AACD;;AACDK,EAAAA,GAAG,CAACN,GAAD,EAAMK,IAAN,EAAYJ,MAAZ,EAAoB;AACrB,WAAO,KAAKZ,QAAL,CAAciB,GAAd,CAAkBN,GAAlB,EAAuBK,IAAvB,EAA6BJ,MAA7B,CAAP;AACD;;AACDM,EAAAA,MAAM,CAACP,GAAD,EAAMC,MAAN,EAAc;AAClB,WAAO,KAAKZ,QAAL,CAAckB,MAAd,CAAqBP,GAArB,EAA0BC,MAA1B,CAAP;AACD;;AA1BiB;;AA4BpB,eAAe,IAAId,aAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nclass AxiosServices {\r\n  constructor() {\r\n    const instance = axios.create();\r\n    instance.interceptors.response.use(this.handleSuccess, this.handleError);\r\n    this.instance = instance;\r\n  }\r\n  handleSuccess(response) {\r\n    return response;\r\n  }\r\n  handleError(error) {\r\n    return Promise.reject(error);\r\n  }\r\n  get(url, config) {\r\n    return this.instance.get(url, config);\r\n  }\r\n  getImage(url) {\r\n    return this.instance.get(url, { responseType: \"blob\" });\r\n  }\r\n  post(url, data, config) {\r\n    return this.instance.post(url, data, config);\r\n  }\r\n  put(url, data, config) {\r\n    return this.instance.put(url, data, config);\r\n  }\r\n  delete(url, config) {\r\n    return this.instance.delete(url, config);\r\n  }\r\n}\r\nexport default new AxiosServices();\r\n"]},"metadata":{},"sourceType":"module"}