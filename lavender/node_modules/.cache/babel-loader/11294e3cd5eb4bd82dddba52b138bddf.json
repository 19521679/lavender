{"ast":null,"code":"import * as loginApi from \"../../apis/login\";\nimport * as loginConst from \"../constrants/loginConst\";\nimport jwt from 'jwt-decode';\nexport const postLogin = () => {\n  return {\n    type: loginConst.POST_LOGIN\n  };\n};\nexport const postLoginSuccess = data => {\n  return {\n    type: loginConst.POST_LOGIN_SUCCESS,\n    payload: {\n      data: data\n    }\n  };\n};\nexport const postLoginFailed = error => {\n  return {\n    type: loginConst.POST_LOGIN_FAILED,\n    payload: {\n      error\n    }\n  };\n};\nexport const postLoginReport = req => {\n  return async dispatch => {\n    await loginApi.login({\n      \"email\": \"19521679@gm.uit.edu.vn\",\n      \"password\": \"1\"\n    }).then(success => {\n      if (success.status === 200) {\n        dispatch(postLoginSuccess(success.data));\n        const token = success.data;\n        console.log(success);\n        const user = jwt(token); // decode your token here\n\n        console.log(user);\n      } else dispatch(postLoginFailed(success));\n    }).catch(error => {\n      dispatch(postLoginFailed(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/khanhle/Documents/GitHub/web/lavender/src/Components/redux/actions/loginAct.js"],"names":["loginApi","loginConst","jwt","postLogin","type","POST_LOGIN","postLoginSuccess","data","POST_LOGIN_SUCCESS","payload","postLoginFailed","error","POST_LOGIN_FAILED","postLoginReport","req","dispatch","login","then","success","status","token","console","log","user","catch"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,kBAA1B;AACA,OAAO,KAAKC,UAAZ,MAA4B,0BAA5B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEH,UAAU,CAACI;AADZ,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACLH,IAAAA,IAAI,EAAEH,UAAU,CAACO,kBADZ;AAELC,IAAAA,OAAO,EAAE;AACPF,MAAAA,IAAI,EAACA;AADE;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACxC,SAAO;AACLP,IAAAA,IAAI,EAAEH,UAAU,CAACW,iBADZ;AAELH,IAAAA,OAAO,EAAE;AACPE,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,MAAME,eAAe,GAAKC,GAAD,IAAS;AACvC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMf,QAAQ,CACXgB,KADG,CACG;AACL,eAAQ,wBADH;AAEL,kBAAW;AAFN,KADH,EAKHC,IALG,CAKGC,OAAD,IAAa;AACjB,UAAIA,OAAO,CAACC,MAAR,KAAiB,GAArB,EACA;AAACJ,QAAAA,QAAQ,CAACT,gBAAgB,CAACY,OAAO,CAACX,IAAT,CAAjB,CAAR;AACC,cAAMa,KAAK,GAAGF,OAAO,CAACX,IAAtB;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,cAAMK,IAAI,GAAGrB,GAAG,CAACkB,KAAD,CAAhB,CAHF,CAG2B;;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAED,OAPD,MAQKR,QAAQ,CAACL,eAAe,CAACQ,OAAD,CAAhB,CAAR;AACN,KAfG,EAgBHM,KAhBG,CAgBIb,KAAD,IAAW;AAChBI,MAAAA,QAAQ,CAACL,eAAe,CAACC,KAAD,CAAhB,CAAR;AACD,KAlBG,CAAN;AAmBD,GApBD;AAqBD,CAtBM","sourcesContent":["import * as loginApi from \"../../apis/login\";\nimport * as loginConst from \"../constrants/loginConst\";\nimport jwt from 'jwt-decode';\n\nexport const postLogin = () => {\n  return {\n    type: loginConst.POST_LOGIN,\n  };\n};\n\nexport const postLoginSuccess = (data) => {\n  return {\n    type: loginConst.POST_LOGIN_SUCCESS,\n    payload: {\n      data:data,\n    },\n  };\n};\n\nexport const postLoginFailed = (error) => {\n  return {\n    type: loginConst.POST_LOGIN_FAILED,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const postLoginReport =  (req) => {\n  return async (dispatch) => {\n    await loginApi\n      .login({\n        \"email\":\"19521679@gm.uit.edu.vn\",\n        \"password\":\"1\"\n      })\n      .then((success) => {\n        if (success.status===200) \n        {dispatch(postLoginSuccess(success.data));\n          const token = success.data;\n          console.log(success);\n          const user = jwt(token); // decode your token here\n          console.log(user);\n        \n        }\n        else dispatch(postLoginFailed(success));\n      })\n      .catch((error) => {\n        dispatch(postLoginFailed(error));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}